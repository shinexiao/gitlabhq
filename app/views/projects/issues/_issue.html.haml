%li{ id: dom_id(issue), class: issue_css_classes(issue), url: issue_path(issue), data: { labels: issue.label_ids, id: issue.id } }
  - if @bulk_edit
    .issue-check
      = check_box_tag dom_id(issue, "selected"), nil, false, 'data-id' => issue.id, class: "selected_issue"

  .issue-title.title
    %span.issue-title-text
      = confidential_icon(issue)
      = link_to issue.title, issue_path(issue)
    %ul.controls
      - if issue.closed?
        %li
          CLOSED

      - if issue.assignee
        %li
          = link_to_member(@project, issue.assignee, name: false, title: "Assigned to :name")

      - upvotes, downvotes = issue.upvotes, issue.downvotes
      - if upvotes > 0
        %li
          = icon('thumbs-up')
          = upvotes

      - if downvotes > 0
        %li
          = icon('thumbs-down')
          = downvotes

      - note_count = issue.notes.user.count
      %li
        = link_to issue_path(issue, anchor: 'notes'), class: ('no-comments' if note_count.zero?) do
          = icon('comments')
          = note_count

  .issue-info
    #{issue.to_reference} &middot;
    opened #{time_ago_with_tooltip(issue.created_at, placement: 'bottom')}
    by #{link_to_member(@project, issue.author, avatar: false)}
    - if issue.milestone
      &nbsp;
      = link_to namespace_project_issues_path(issue.project.namespace, issue.project, milestone_title: issue.milestone.title) do
        = icon('clock-o')
        = issue.milestone.title
    - if issue.due_date
      %span{class: "#{'cred' if issue.overdue?}"}
        &nbsp;
        = icon('calendar')
        = issue.due_date.to_s(:medium)
    - if issue.labels.any?
      &nbsp;
      - issue.labels.each do |label|
        = link_to_label(label, project: issue.project)
    - if issue.tasks?
      &nbsp;
      %span.task-status
        = issue.task_status

    .pull-right.issue-updated-at
      %span updated #{time_ago_with_tooltip(issue.updated_at, placement: 'bottom', html_class: 'issue_update_ago')}
